{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Repl.it config schema (.replit)",
  "description": "https://fly.io/docs/reference/configuration",
  "x-taplo-info": {
    "authors": ["Joshua Sierles (https://github.com/jsierles)"],
    "patterns": ["\\.*fly(.*)?\\.toml)?$"]
  },
  "type": "object",
  "properties": {
    "app": {
      "description": "Fly.io application name",
      "type": "string"
    },
    "kill_timeout": {
      "description": "Seconds to wait before forcing a VM process to exit. Default is 5 seconds.",
      "type": "integer"
    },
    "kill_signal": {
      "description": "Signal to send to a process to shut it down gracefully. Default is SIGINT.",
      "type": "string",
      "enum": [
        "SIGINT",
        "SIGTERM",
        "SIGQUIT",
        "SIGUSR1",
        "SIGUSR2",
        "SIGKILL",
        "SIGSTOP"
      ]
    },
    "services": {
      "description": "Services",
      "type": "array",
      "items": {
        "type": ["object", "array"],
        "properties": {
          "internal_port": {
            "description": "The port this application listens on to communicate with clients. The default is 8080. We recommend applications use the default.",
            "type": "integer",
            "default": 8080
          },
          "concurrency": {
            "x-taplo": {
              "docs": {
                "main": "Control autoscaling metrics (connections or requests) and limits (hard and soft)."
              }
            },
            "$ref": "#/definitions/Concurrency"
          },
          "ports": {
            "description": "For each external port you want to accept connections on, add a `ports` section.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "handlers": {
                  "x-taplo": {
                    "links": {
                      "key": "https://fly.io/docs/reference/services/#connection-handlers"
                    }
                  },
                  "description": "An array of strings that select handlers to terminate the connection at the edge.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "enum": ["http", "tls", "proxy_proto"]
                  }
                },
                "port": {
                  "default": 8080,
                  "type": "integer",
                  "description": "A string which selects which external ports you want Fly to accept traffic on. "
                },
                "force_https": {
                  "type": "boolean",
                  "description": "Force HTTP connections to HTTPS. Only works when the only configured handler  is `http`."
                }
              }
            }
          },
          "tcp_checks": {
            "description": "By default, the Fly platform checks service health by connecting to the configured port.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "handlers": {
                  "x-taplo": {
                    "links": {
                      "key": "https://fly.io/docs/reference/services/#connection-handlers"
                    }
                  },
                  "description": "An array of strings that select handlers to terminate the connection at the edge.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 1,
                    "enum": ["http", "tls", "proxy_proto"]
                  }
                },
                "port": {
                  "default": 8080,
                  "type": "integer",
                  "description": "A string which selects which external ports you want Fly to accept traffic on. "
                },
                "force_https": {
                  "type": "boolean",
                  "description": "Force HTTP connections to HTTPS. Only works when the only configured handler  is `http`."
                }
              }
            }
          }
        }
      }
    },
    "deploy": {
      "type": "object",
      "properties": {
        "release_command": {
          "x-taplo": {
            "links": {
              "key": "https://fly.io/docs/reference/configuration/#release_command"
            },
            "initKeys": ["importantKey"]
          },
          "description": "Command to run after a build, with access to the production environment, but before deployment. Non-zero exit status will abort the deployment.\n\n```toml\n[deploy]\n  release_command =\"bundle exec rails db:migrate\"\n```",
          "type": "string"
        },
        "strategy": {
          "description": "Strategy for replacing VMs during a deployment.",
          "type": "string",
          "default": "canary",
          "enum": ["canary", "rolling", "bluegreen", "immediate"],
          "x-taplo": {
            "docs": {
              "main": "Strategy for replacing VMs during a deployment.",
              "enumValues": [
                "This default strategy - for apps without volumes - will boot a single, new VM with the new release, verify its health, then proceed with a rolling restart strategy.",
                "One by one, each running VM is taken down and replaced by a new release VM. This is the default strategy for apps with volumes.",
                "For every running VM, a new one is booted alongside it. All new VMs must pass health checks to complete deployment, when traffic gets migrated to new VMs. If your app has multiple VMs, this strategy may reduce deploy time and downtime, assuming your app is scaled to 2 or more VMs.",
                "Replace all VMs with new releases immediately without waiting for health checks to pass. This is useful in emergency situations where you're confident a release will be healthy."
              ],
              "defaultValue": "Default is 'canary': boot a single, new VM with the new release, verify its health, then proceed with a rolling restart strategy."
            },
            "links": {
              "key": "https://fly.io/docs/reference/configuration/#strategy"
            }
          }
        }
      }
    },
    "experimental": {
      "description": "Flags and featurs which may be subject to change, deprecation or promotion to the main configuration.",
      "type": "object",
      "properties": {
        "cmd": {
          "description": "Override the server command (CMD) set by the Dockerfile. Specify as an array of strings:\n\n```toml\ncmd = [\"path/to/command\", \"arg1\", \"arg2\"]\n```",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 2
          }
        },
        "entrypoint": {
          "description": "This overrides the ENTRYPOINT set by the Dockerfile. Specify as an array of strings:\n\n```toml\nentrypoint = [\"path/to/command\", \"arg1\", \"arg2\"]\n```",
          "type": "string",
          "minLength": 2
        },
        "auto_rollback": {
          "description": "Failed deployments should roll back automatically to the previous successfully deployed release. Defaults to `true`",
          "type": "boolean"
        },
        "private_network": {
          "description": "Enables private network access to the Fly organization. Defaults to `true`.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "build": {
      "description": "Build configuration options. See docs at https://fly.io/docs/reference/builders.",
      "type": "object",
      "properties": {
        "builder": {
          "description": "Builder Docker image to be used with the 'buildpacks' option",
          "type": "string"
        },
        "buildpacks": {
          "description": "Buildpacks to be run by the 'builder' Docker image",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "uniqueItems": true,
          "minItems": 1
        },
        "args": {
          "description": "Build arguments passed to both Dockerfile and Buildpack builds. These are not available on VMs at runtime.\n```toml\n[build.args]\n  USER=\"julieta\"\n  MODE=\"production\"\n```",
          "type": "object",
          "items": {
            "type": "object"
          }
        },

        "image": {
          "description": "Docker image to be deployed (skips the build process)",
          "type": "string"
        },
        "dockerfile": {
          "description": "Dockerfile used for builds. Defaults to './Dockerfile'",
          "type": "string"
        },
        "additionalProperties": false
      }
    },
    "additionalProperties": true
  },
  "definitions": {
    "Concurrency": {
      "type": "object",
      "description": "Control autoscaling behavior based on concurrent requests or connections.",
      "items": {
        "properties": {
          "type": {
            "type": "string",
            "default": "connections",
            "x-taplo": {
              "docs": {
                "enumValues": [
                  "Autoscale based on number of concurrent connections",
                  "Autoscale based on number of concurrent requests"
                ]
              }
            },
            "enum": ["connections", "requests"]
          },
          "hard_limit": {
            "default": 25,
            "type": "integer",
            "description": "When an application instance is at or over this number, the system will bring up another instance."
          },
          "soft_limit": {
            "default": 20,
            "type": "integer",
            "description": "When an application instance is at or over this number, the system is likely to bring up another instance."
          }
        }
      }
    },
    "Port": {
      "type": "object",
      "description": "For each external port you want to accept connections on, add a `ports` section.",
      "items": {
        "properties": {
          "handlers": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "enum": ["http", "tls", "proxy_proto"]
            }
          },
          "port": {
            "default": 8080,
            "type": "number",
            "minimum": 1,
            "maximum": 65535,
            "description": "The external port you want Fly to accept traffic on."
          },
          "force_https": {
            "default": 20,
            "type": "integer",
            "description": "When an application instance is at or over this number, the system is likely to bring up another instance."
          }
        }
      }
    }
  }
}
